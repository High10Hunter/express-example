version: 2.1

orbs:
    docker: circleci/docker@2.2.0

parameters:
    task:
        type: enum
        enum: ['test', 'build', 'deploy']
        default: 'build'
    build_stage:
        type: enum
        enum: ['dev', 'prod']
        default: 'dev'

executors:
    node:
        docker:
            - image: cimg/node:16.16.0

jobs:
    test:
        machine: true
        working_directory: ~/express-example
        steps:
            - checkout
            - restore_cache:
                  name: Restore NPM cache
                  keys:
                      - npm-cache-{{ checksum "package-lock.json" }}
            - run:
                  name: Run tests
                  command: npm run test

    build:
        environment:
            DOCKER_IMAGE: high10hunter/node
            DOCKER_TAG: latest
        machine:
            image: ubuntu-2204:2023.04.2
            docker_layer_caching: true
        working_directory: ~/express-example
        steps:
            - checkout
            - restore_cache:
                  name: Restore NPM cache
                  keys:
                      - npm-cache-{{ checksum "package-lock.json" }}
                      - npm-cache-
            - run:
                  name: Update NPM version
                  command: npm install -g npm@latest

            - save_cache:
                  name: Save NPM cache
                  key: npm-cache-{{ checksum "package-lock.json" }}
                  paths:
                      - ~/.cache/npm
                      - ./node_modules
            - run:
                  name: Install dependencies
                  command: npm install
            - docker/check:
                  docker-username: DOCKER_USERNAME
                  docker-password: DOCKER_PASSWORD
            - docker/build:
                  image: $DOCKER_IMAGE
                  tag: $DOCKER_TAG
            - docker/push:
                  digest-path: /tmp/digest.txt
                  image: $DOCKER_IMAGE
                  tag: $DOCKER_TAG
            - run:
                  command: |
                      echo "Digest is: $(</tmp/digest.txt)"
    deploy:
        executor: node
        working_directory: ~/express-example
        steps:
            - checkout
            - restore_cache:
                  name: Restore NPM cache
                  keys:
                      - npm-cache-{{ checksum "package-lock.json" }}
                      - npm-cache-
            - run:
                  name: Install dependencies
                  command: npm ci
            - save_cache:
                  name: Save NPM cache
                  key: npm-cache-{{ checksum "package-lock.json" }}
                  paths:
                      - ~/.cache/npm
                      - ./node_modules
            - run:
                  name: 'Deploy to << pipeline.parameters.build_stage >>'
                  command: |
                      curl -i -H "X-Hub-Signature: $GITHUB_SECRET" \
                          -H "Content-Type: application/json" \
                          -X POST $WEBHOOK_URL/redeploy

workflows:
    version: 3
    Test:
        when:
            equal: [test, << pipeline.parameters.task >>]
        jobs:
            - test
    Build:
        when:
            equal: [build, << pipeline.parameters.task >>]
        jobs:
            - build:
                  filters:
                      branches:
                          only: develop

    DeployDev:
        when:
            and:
                - equal: [deploy, << pipeline.parameters.task >>]
                - equal: [dev, << pipeline.parameters.build_stage >>]
        jobs:
            - build
            - deploy:
                  requires:
                      - build
                  filters:
                      branches:
                          only: main

    DeployProd:
        when:
            and:
                - equal: [deploy, << pipeline.parameters.task >>]
                - equal: [prod, << pipeline.parameters.build_stage >>]
        jobs:
            - build
            - deploy:
                  requires:
                      - build
                  filters:
                      branches:
                          only: main
